<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_328385_national_personnel</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>SendRandomUserData</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	try { 
	    var r = new sn_ws.RESTMessageV2('x_328385_national.Push Random User', 'Default POST');		
		r.setQueryParameter('first_name', current.first_name);
		r.setQueryParameter('last_name', current.last_name);
		r.setQueryParameter('age', current.age);
		r.setQueryParameter('phone', current.phone);
		
		//set a MID server name if one wants to run the message on MID
		r.setMIDServer('CRAIG-DEV2');

		//if the message is configured to communicate through ECC queue, either
		//by setting a MID server or calling executeAsync, one needs to set skip_sensor
		//to true. Otherwise, one may get an intermittent error that the response body is null
		r.setEccParameter('skip_sensor', true);
				
		// call the MID server Responder API
		var response = r.execute();
		var responseBody = response.getBody();
		var httpStatus = response.getStatusCode();
		gs.info('x_REST_MESSAGE_NATIONAL_328385 Response Body: ' + responseBody);
		gs.info('x_REST_MESSAGE_NATIONAL_328385 Status Code: ' + httpStatus);
		
		// parse the response
		var responseObj = JSON.parse(responseBody);
		var u_first_name = responseObj.first_name;
		var u_last_name = responseObj.last_name;
		var u_age = responseObj.age;
		var u_phone = responseObj.phone;
		gs.info('x_REST_MESSAGE_NATIONAL_328385 POST Success: ' + u_first_name + ' ' + u_last_name + ' age: ' + u_age + ' phone: ' + u_phone);
		
	}
	catch(err) {
		var message = err.message;
		gs.info('x_REST_MESSAGE_NATIONAL_328385 returned error: ' + err);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-04-04 16:18:15</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>cccd8e2edba07300346ddde748961980</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>SendRandomUserData</sys_name>
        <sys_overrides/>
        <sys_package display_value="National Register" source="x_328385_national">e7e9599adbe03300346ddde7489619db</sys_package>
        <sys_policy/>
        <sys_scope display_value="National Register">e7e9599adbe03300346ddde7489619db</sys_scope>
        <sys_update_name>sys_script_cccd8e2edba07300346ddde748961980</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-04-06 18:05:51</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=cccd8e2edba07300346ddde748961980"/>
</record_update>
