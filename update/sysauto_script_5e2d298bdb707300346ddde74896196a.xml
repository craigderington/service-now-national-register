<?xml version="1.0" encoding="UTF-8"?><record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <condition/>
        <conditional>false</conditional>
        <name>GetRandomUserEvery30Minutes</name>
        <run_as display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period>1970-01-01 00:30:00</run_period>
        <run_start>2019-04-18 13:13:06</run_start>
        <run_time>1970-01-01 08:00:00</run_time>
        <run_type>on_demand</run_type>
        <script><![CDATA[(function () {
	try { 
		// call the get random user rest message
		var r = new sn_ws.RESTMessageV2('x_328385_national.Get Random User', 'Default GET');

		gs.info("x_REST_NATL_REG :: Calling Default REST Message...");
		
		// set up response vars
		var response = r.execute();
		var responseBody = response.getBody();
		var httpStatus = response.getStatusCode();
		gs.info("x_REST_NATL_REG :: HTTP Status Code: " + httpStatus.toString());
		
		// check http status, if not 200, send to debug log
		if (httpStatus && httpStatus === 200) {
			
		    // httpStatus == 200
			// init the glide record
			gr = new GlideRecord("x_328385_national_personnel");
			gr.query();
			gr.initialize();

			// parse the json response obj
			var respObj = JSON.parse(responseBody);

			// set our glide record vars
			gr.title = respObj.results[0].name.title;
			gr.first_name = respObj.results[0].name.first;
			gr.last_name = respObj.results[0].name.last;
			gr.street_address = respObj.results[0].location.street;
			gr.city = respObj.results[0].location.city;
			gr.state = respObj.results[0].location.state;
			gr.zip_code = respObj.results[0].location.postcode;
			gr.email = respObj.results[0].email;
			gr.date_of_birth = respObj.results[0].dob.date;
			gr.age = respObj.results[0].dob.age;
			gr.phone = respObj.results[0].phone;
			gr.nationality = respObj.results[0].nat;
			gr.gender = respObj.results[0].gender;
			gr.seed = respObj.info.seed;
			gs.info("Random user seed: " + gr.seed);

			// insert record
			sysId = gr.insert();
			gs.info("x_REST_NATL_REG :: Added Random User record: " + sysId);	
						
			
		} else {
		    // send to debug log  
			gs.info("x_REST_NATL_REG :: HTTP Call to RandomUser.me failed with http status code: " + httpStatus.toString());
		    return; // return none
		}		
	}
	catch(ex) {
		var message = ex.message;
		gs.debug("x_REST_NATL_REG :: Automated Get Random User failed with error: " + message);
	}

})();]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-04-18 13:32:39</sys_created_on>
        <sys_id>5e2d298bdb707300346ddde74896196a</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>GetRandomUserEvery30Minutes</sys_name>
        <sys_package display_value="National Register" source="x_328385_national">e7e9599adbe03300346ddde7489619db</sys_package>
        <sys_policy/>
        <sys_scope display_value="National Register">e7e9599adbe03300346ddde7489619db</sys_scope>
        <sys_update_name>sysauto_script_5e2d298bdb707300346ddde74896196a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-05-15 20:26:47</sys_updated_on>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
